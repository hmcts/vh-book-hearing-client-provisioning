
# Set variables once
variables:
  - group: 'vh-vsts-automation'  # variable group
  - group: 'Azure AD Tenant - hearings.reform.hmcts.net'
  - group: 'vh-hearings-ssl-certificates'
  - group: 'vh-hearings-reform-hmcts-net-dns-zone'

  - name: service 
    value: vh-book-hearing-client # name of the app to be registered

  - name: keyVaultName 
    value: 'vhcoreinfrahtpreview' # key vault name to for storing AAD app's details - appId, ClientSecret, etc.

  - name: resourceGroupName
    value: $(service)-$(environmentName) # resource group name for where the website is located

  - name: AppServicePlanName
    value: vh-core-infra-$(environmentName) # App Service Plan name

  - name: WebSiteName
    value: $(service)-$(environmentName)  # Web Site name 

  - name: CustomHostname
    value: $(WebSiteName)$(AzureAppServiceWebSiteCustomDomainName) # custom hostname used by the website

  - name: AADAppReplyUrls
    value: https://$(WebSiteName)$(AzureAppServiceWebSiteCustomDomainName), https://$(WebSiteName)$(AzureAppServiceWebSiteCustomDomainName)/login, https://$(WebSiteName)$(AzureAppServiceWebSiteCustomDomainName)/dashboard, https://$(WebSiteName)$(AzureAppServiceWebSiteCustomDomainName)/logout #CSV list of replay urls


trigger:
- master
pr:
- master

jobs:
- job: 
  displayName: 'Registr AAD App'
  pool: Azure-VSTS-VS2017

  # Reference templae for setting up build tools
  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # whether to fetch clean each time

  - powershell: |
     git clone https://github.com/hmcts/vh-ps-modules.git
     cd .\vh-ps-modules\
     git checkout updated-dns-module
  
    displayName: 'Get PowerShell module source'


  - powershell: | 
      #Get-ChildItem -Recurse
      Install-Module AzureAD
      Install-Module AzureRM.KeyVault
      Copy-Item -Path $(System.DefaultWorkingDirectory)/*vh-ps-modules/AzureADApplicationRegistration -Destination "C:\Program Files\WindowsPowerShell\Modules" -Recurse -Force
      Copy-Item -Path $(System.DefaultWorkingDirectory)/*vh-ps-modules/SetDNSRecord -Destination "C:\Program Files\WindowsPowerShell\Modules" -Recurse -Force
    displayName: 'Import PowerShell Modules'

  - powershell: | 
     Invoke-AzureADApplicationRegistration `
     -AzureTenantId '$(vh_teantid)' `
     -AzureAdAppId '$(vh_vsts_automation_dev_AppId)' `
     -AzureAdAppCertificateThumbprint '$(vh_vsts_automation_dev_CertThumbprit)' `
     -AzureSubscriptionId '$(vh_azure_subscription_id_dev)' `
     -AzureADApplicationName '$(service)-$(environmentName)' `
     -AzureKeyVaultName '$(keyVaultName)' `
     -AzureTenantIdSecondary '$(vh_hearings_tenata_id)' `
     -AzureAdAppIdSecondary '$(vh_hearings_vsts_automation_AppId)' `
     -AzureAdAppCertificateThumbprintSecondary '$(vh_hearings_vsts_automation_CertThumbprit)' `
     -verbose
    displayName: 'Register AAD App'

  - powershell: | 
      Set-AzureADApplicationReplyUrls `
      -AzureTenantIdSecondary '$(vh_hearings_tenata_id)' `
      -AzureAdAppIdSecondary '$(vh_hearings_vsts_automation_AppId)' `
      -AzureAdAppCertificateThumbprintSecondary '$(vh_hearings_vsts_automation_CertThumbprit)' `
      -AADAppName "$(service)-$(environmentName)" `
      -AADAppReplyUrls "$(AADAppReplyUrls)"
    displayName: 'Set AAD App Replay URLs'

  
  # - task: AzurePowerShell@3
  #   displayName: 'Set DNS records for web app'
  #   inputs:
  #     azureSubscription: 'DCD-CFT-VH-Pilot'
  #     azurePowerShellVersion: LatestVersion
  #     ScriptType: InlineScript
  #     Inline: |
  #       $WebSiteName = "$(service)-$(environmentName)"
  #       $AzureAppServiceWebSiteDomainName = "$(AzureAppServiceWebSiteDomainName)"
  #       $CNAME = $WebSiteName + $AzureAppServiceWebSiteDomainName
  #       $AzureResourceGroupName = "$(AzureResourceGroupName)"
  #       $AzureDNSZoneName = "$(AzureDNSZoneName)"

  #       Write-Host ("Searching for {0} with a CNAME of {1} in DNS Zone {2}" -f $WebSiteName, $CNAME, $AzureDNSZoneName)
  #       $AzureDNSRecordResult = Get-AzureRmDnsRecordSet -Name $WebSiteName -ZoneName $AzureDNSZoneName  -ResourceGroupName $AzureResourceGroupName -RecordType CNAME -ErrorAction SilentlyContinue

  #       if ($null -eq $AzureDNSRecordResult) {
  #           Write-Host "Creating new CNAME record"
  #           $Records = @()
  #           $Records += New-AzureRmDnsRecordConfig -Cname $CNAME
  #           New-AzureRmDnsRecordSet -Name $WebSiteName -RecordType CNAME -ResourceGroupName $AzureResourceGroupName -TTL 3600 -ZoneName $AzureDNSZoneName -DnsRecords $Records
  #       }
  #       elseif ($WebSiteName -ne $AzureDNSRecordResult.Name) {
  #           Write-Host "Updateing CNAME record"
  #           $RecordSet = Set-AzureRmDnsRecordSet -ResourceGroupName $AzureResourceGroupName -ZoneName $AzureDNSZoneName -Name $WebSiteName -RecordType CNAME
  #           Set-AzureRmDnsRecordSet -RecordSet $RecordSet
  #       }
  #       else {
  #           Write-Host "CNAME record already exists."
  #       }

  - task: AzurePowerShell@3
    displayName: 'Set DNS records for web app'
    inputs:
      azureSubscription: 'DCD-CFT-VH-Pilot'
      azurePowerShellVersion: LatestVersion
      ScriptType: InlineScript
      Inline: |

        Set-AzureRmDnsRecord -WebSiteName "$(service)-$(environmentName)" `
        -AzureAppServiceWebSiteDomainName "$(AzureAppServiceWebSiteDomainName)" `
        -AzureResourceGroupName "$(AzureResourceGroupName)" `
        -AzureDNSZoneName "$(AzureDNSZoneName)"

  - task: AzureResourceGroupDeployment@2
    displayName: 'Provision Web App'
    inputs:
      azureSubscription: 'Reform-CFT-VH-Dev'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(resourceGroupName)'
      location: 'UK West'

      csmFile: 'infrastructure/azuredeploy.json'

      csmParametersFile: 'infrastructure/azuredeploy.parameters.json'
      overrideParameters: -appServicePlanName $(AppServicePlanName) -AzureWebsite $(WebSiteName) -customHostname $(CustomHostname) -certificateThumbprint $(WildcardCertificateThumbprint)

      deploymentMode: Incremental

# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Set variables once
variables:
  - group: 'vh-vsts-automation'  # another variable group
  - group: 'Azure AD Tenant - hearings.reform.hmcts.net'
  - group: 'vh-hearings-ssl-certificates'
  - group: 'vh-hearings-reform-hmcts-net-dns-zone'
  - name: service # name of a variable
    value: vh-app-api-jb-2 # value of the variable
  - name: keyVaultName # name of a variable
    value: 'vh-jb-test' # value of the variable
  - name: resourceGroupName
    value: vh-jb
  - name: AppServicePlanName
    value: vh-jb
  - name: WebSiteName
    value: $(service)-$(environmentName)
  - name: CustomHostname
    value: $(WebSiteName)$(AzureAppServiceWebSiteCustomDomainName)
  - name: certificateThumbprint
    value: vh-jb
  - name: AADAppReplyUrls
    value: https://$(WebSiteName)$(AzureAppServiceWebSiteCustomDomainName)/, https://$(WebSiteName)$(AzureAppServiceWebSiteCustomDomainName)/login


trigger:
- master
pr:
- master

jobs:
- job: 
  displayName: 'Registr AAD App'
  pool: Azure-VSTS-VS2017

  # Reference templae for setting up build tools
  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # whether to fetch clean each time

  - powershell: |
     git clone https://github.com/hmcts/vh-ps-modules.git
  
    displayName: 'Get PowerShel module source'


  - powershell: | 
      #Get-ChildItem -Recurse
      Install-Module AzureAD
      Install-Module AzureRM.KeyVault
      Copy-Item -Path $(System.DefaultWorkingDirectory)/*vh-ps-modules/AzureADApplicationRegistration -Destination "C:\Program Files\WindowsPowerShell\Modules" -Recurse -Force
    displayName: 'Import AzureADApplicationRegistration Module'


  - powershell: | 
     write-host ('{0}' -f '$(vh_teantid)')
     write-host ('{0}' -f '$(vh_vsts_automation_dev_AppId)')
     write-host ('{0}' -f '$(vh_vsts_automation_dev_CertThumbprit)')
     write-host ('{0}' -f '$(vh_azure_subscription_id_dev)')
     write-host ('{0}' -f '$(service)_$(environmentName)')
     write-host ('{0}' -f '$(keyVaultName)')
     write-host ('{0}' -f '$(vh_hearings_tenata_id)')
     write-host ('{0}' -f '$(vh_hearings_vsts_automation_AppId)')
     write-host ('{0}' -f '$(vh_hearings_vsts_automation_CertThumbprit)')
    displayName: 'Print variable values'


  - powershell: | 
     Invoke-AzureADApplicationRegistration `
     -AzureTenantId '$(vh_teantid)' `
     -AzureAdAppId '$(vh_vsts_automation_dev_AppId)' `
     -AzureAdAppCertificateThumbprint '$(vh_vsts_automation_dev_CertThumbprit)' `
     -AzureSubscriptionId '$(vh_azure_subscription_id_dev)' `
     -AzureADApplicationName '$(service)-$(environmentName)' `
     -AzureKeyVaultName '$(keyVaultName)' `
     -AzureTenantIdSecondary '$(vh_hearings_tenata_id)' `
     -AzureAdAppIdSecondary '$(vh_hearings_vsts_automation_AppId)' `
     -AzureAdAppCertificateThumbprintSecondary '$(vh_hearings_vsts_automation_CertThumbprit)' `
     -verbose
    displayName: 'Register AAD App'

  - powershell: | 
     Set-AzureADApplicationReplyUrls `
     -AzureTenantId "$(vh_teantid)" `
     -AzureAdAppId "$(vh_vsts_automation_dev_AppId)" `
     -AzureAdAppCertificateThumbprint "$(vh_vsts_automation_dev_CertThumbprit)" `
     -AADAppName "$(service)-$(environmentName)" `
     -AADAppReplyUrls "$(AADAppReplyUrls)"
    displayName: 'Set AAD App Replay URLs'


  - task: AzureResourceGroupDeployment@2
    displayName: 'Validate ARM template'
    inputs:
      azureSubscription: 'Reform-CFT-VH-Dev'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(resourceGroupName)'
      location: 'UK West'

      csmFile: 'infrastructure/azuredeploy.json'

      csmParametersFile: 'infrastructure/azuredeploy.parameters.json'
      overrideParameters: -appServicePlanName $(AppServicePlanName) -AzureWebsite $(WebSiteName) -customHostname $(CustomHostname) -certificateThumbprint $(WildcardCertificateThumbprint)

      deploymentMode: Incremental




